/*******************************************************************************
 * Copyright 2012-2013 Trento RISE
 * 
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 ******************************************************************************/
package eu.trentorise.smartcampus.domain.smartplannerdata;

import it.sayservice.platform.compiler.domain.model.annotations.ServiceNotification;
import it.sayservice.platform.compiler.domain.model.annotations.Subscription;
import it.sayservice.platform.compiler.domain.model.annotations.Local;
import it.sayservice.platform.compiler.domain.model.annotations.Process;

import eu.trentorise.smartcampus.domain.discovertrento.POIService;
import eu.trentorise.smartcampus.domain.discovertrento.GenericPOI;


DomainObject SmartPlannerBikeSharingService implements POIService {
    
    @ServiceNotification(serviceId="eu.trentorise.smartcampus.services.smartplannerdata.SmartplannerdataService", methodName="GetBikeSharing", converter="eu.trentorise.smartcampus.domain.smartplannerdata.BikeSharingDataConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="eu.trentorise.smartcampus.services.smartplannerdata.SmartplannerdataService", methodName="GetBikeSharing")
    operation subscribeLocations(agencyId:String);
    
    action initialize() {
        invoke subscribeLocations("BIKE_SHARING_COMUNE");        
    }
}

DomainObject SmartPlannerCarSharingService implements POIService {
    
    @ServiceNotification(serviceId="eu.trentorise.smartcampus.services.smartplannerdata.SmartplannerdataService", methodName="GetCarSharing", converter="eu.trentorise.smartcampus.domain.smartplannerdata.CarSharingDataConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="eu.trentorise.smartcampus.services.smartplannerdata.SmartplannerdataService", methodName="GetCarSharing")
    operation subscribeLocations(agencyId:String);
    
    action initialize() {
        invoke subscribeLocations("CAR_SHARING_SERVICE");        
    }
}

DomainObject SmartPlannerCarParkingService implements POIService {
    
    @ServiceNotification(serviceId="eu.trentorise.smartcampus.services.smartplannerdata.SmartplannerdataService", methodName="GetCarParking", converter="eu.trentorise.smartcampus.domain.smartplannerdata.CarParkingDataConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="eu.trentorise.smartcampus.services.smartplannerdata.SmartplannerdataService", methodName="GetCarParking")
    operation subscribeLocations(agencyId:String);
    
    action initialize() {
        invoke subscribeLocations("COMUNE_DI_TRENTO");        
    }
}

DomainObject SmartPlannerTransitStopsService implements POIService {
    
    @ServiceNotification(serviceId="eu.trentorise.smartcampus.services.smartplannerdata.SmartplannerdataService", methodName="GetTransitStops", converter="eu.trentorise.smartcampus.domain.smartplannerdata.TransitStopsDataConverter")
    port update(data : GenericPOI[]);

    @Subscription(serviceId="eu.trentorise.smartcampus.services.smartplannerdata.SmartplannerdataService", methodName="GetTransitStops")
    operation subscribeLocations(agencyId:String);
    
    action initialize() {
        invoke subscribeLocations("10");        
        invoke subscribeLocations("12");        
    }
}
